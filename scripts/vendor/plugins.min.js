(function(){!function($){$.countdown=function(el,options){var getDateData,_this=this;return this.el=el,this.$el=$(el),this.$el.data("countdown",this),this.init=function(){return _this.options=$.extend({},$.countdown.defaultOptions,options),_this.options.refresh&&(_this.interval=setInterval(function(){return _this.render()},_this.options.refresh)),_this.render(),_this},getDateData=function(endDate){var dateData,diff;return endDate=Date.parse($.isPlainObject(_this.options.date)?_this.options.date:new Date(_this.options.date)),diff=(endDate-Date.parse(new Date))/1e3,diff<=0&&(diff=0,_this.interval&&_this.stop(),_this.options.onEnd.apply(_this)),dateData={years:0,days:0,hours:0,min:0,sec:0,millisec:0},diff>=31557600&&(dateData.years=Math.floor(diff/31557600),diff-=365.25*dateData.years*86400),diff>=86400&&(dateData.days=Math.floor(diff/86400),diff-=86400*dateData.days),diff>=3600&&(dateData.hours=Math.floor(diff/3600),diff-=3600*dateData.hours),diff>=60&&(dateData.min=Math.floor(diff/60),diff-=60*dateData.min),dateData.sec=diff,dateData},this.leadingZeros=function(num,length){for(null==length&&(length=2),num=String(num);num.length<length;)num="0"+num;return num},this.update=function(newDate){return _this.options.date=newDate,_this},this.render=function(){return _this.options.render.apply(_this,[getDateData(_this.options.date)]),_this},this.stop=function(){return _this.interval&&clearInterval(_this.interval),_this.interval=null,_this},this.start=function(refresh){return null==refresh&&(refresh=_this.options.refresh||$.countdown.defaultOptions.refresh),_this.interval&&clearInterval(_this.interval),_this.render(),_this.options.refresh=refresh,_this.interval=setInterval(function(){return _this.render()},_this.options.refresh),_this},this.init()},$.countdown.defaultOptions={date:"June 7, 2087 15:03:25",refresh:1e3,onEnd:$.noop,render:function(date){return $(this.el).html(date.years+" years, "+date.days+" days, "+this.leadingZeros(date.hours)+" hours, "+this.leadingZeros(date.min)+" min and "+this.leadingZeros(date.sec)+" sec")}},$.fn.countdown=function(options){return $.each(this,function(i,el){var $el;if($el=$(el),!$el.data("countdown"))return $el.data("countdown",new $.countdown(el,options))})}}(jQuery)}).call(this),function($,window,document){"use strict";function dupOpts(options){return extend(!0,{},options||{})}function slice(){var fn=Array.prototype.slice,args=fn.call(arguments,1);return fn.apply(arguments[0],args)}function isUndefined(value){return void 0===value}function all(deferreds){return when.apply($,deferreds)}function resolved(value){return when().then(function(){return value})}function distanceInMeter(origin,destination){var m=Math,pi=m.PI,e=pi*origin.lat()/180,f=pi*origin.lng()/180,g=pi*destination.lat()/180,h=pi*destination.lng()/180,cos=m.cos,sin=m.sin;return 6371e3*m.acos(m.min(cos(e)*cos(g)*cos(f)*cos(h)+cos(e)*sin(f)*cos(g)*sin(h)+sin(e)*sin(g),1))}function ready(fn){"loading"!=document.readyState?fn():document.addEventListener("DOMContentLoaded",fn)}function serialize(obj){return objectKeys(obj).map(function(key){return encodeURIComponent(key)+"="+encodeURIComponent(obj[key])}).join("&")}function service(name){return services[name]||(services[name]=gmElement(name)),services[name]}function gmElement(name){function F(args){return cls.apply(this,args)}var cls=gm[name];return F.prototype=cls.prototype,new F(slice(arguments,1))}function geocode(request){var dfd=deferred();return"string"==typeof request&&(request={address:request}),service("Geocoder").geocode(request,function(results,status){status===gm.GeocoderStatus.OK?dfd.resolve(results[0].geometry.location):dfd.reject(status)}),dfd}function foreachStr(str,fn){foreach(str.split(" "),fn)}function foreach(items,fn){(isArray(items)?items:[items]).forEach(fn)}function objectKeys(obj){return Object.keys(obj)}function objectValues(obj){return objectKeys(obj).map(function(key){return obj[key]})}function resolveLatLngBounds(options,fn){return options=dupOpts(options),options.bounds&&(options.bounds=toLatLngBound(options.bounds)),resolved(fn(options))}function resolveLatLng(options,key,fn){var dfd=deferred();return options=dupOpts(options),when().then(function(){var address=options.address;if(address)return delete options.address,geocode(address).then(function(latLng){options[key]=latLng});options[key]=toLatLng(options[key])}).then(function(){dfd.resolve(fn(options))}).fail(function(reason){dfd.reject(reason)}),dfd}function resolveArrayOfLatLng(options,key,fn){return options=dupOpts(options),options[key]=(options[key]||[]).map(toLatLng),resolved(fn(options))}function toLatLng(mixed,convertLiteral){return isArray(mixed)?new gm.LatLng(mixed[0],mixed[1]):!convertLiteral||!mixed||mixed instanceof gm.LatLng?mixed:new gm.LatLng(mixed.lat,mixed.lng)}function toLatLngBound(mixed,convertLiteral){return isArray(mixed)?new gm.LatLngBounds({lat:mixed[2],lng:mixed[3]},{lat:mixed[0],lng:mixed[1]}):convertLiteral&&!mixed.getCenter?new gm.LatLngBounds({lat:mixed.south,lng:mixed.west},{lat:mixed.north,lng:mixed.east}):mixed}function createOverlayView(map,options){function OverlayView(){function fromLatLngToDivPixel(latlng){return self.getProjection().fromLatLngToDivPixel(latlng)}var self=this,listeners=[];GMOverlayView.call(self),self.setMap(map),self.onAdd=function(){self.getPanes().overlayMouseTarget.appendChild($div[0])},options.position?(self.getPosition=function(){return options.position},self.setPosition=function(latlng){options.position=latlng,self.draw()},self.draw=function(){var ps=fromLatLngToDivPixel(options.position);$div.css({left:ps.x+options.x+"px",top:ps.y+options.y+"px"})}):(self.getBounds=function(){return options.bounds},self.setBounds=function(bounds){options.bounds=bounds,self.draw()},self.draw=function(){var sw=fromLatLngToDivPixel(options.bounds.getSouthWest()),ne=fromLatLngToDivPixel(options.bounds.getNorthEast());$div.css({left:sw.x+options.x+"px",top:ne.y+options.y+"px",width:ne.x-sw.x+options.x+"px",height:sw.y-ne.y+options.y+"px"})}),self.onRemove=function(){listeners.map(function(handler){gm.event.removeListener(handler)}),$div.remove(),self.$=$div=null},self.$=$div}var GMOverlayView=gm.OverlayView,$div=$(document.createElement("div")).css({border:"none",borderWidth:0,position:"absolute"}).append(options.content);return options=extend({x:0,y:0},options),options.position?options.position=toLatLng(options.position,!0):options.bounds&&(options.bounds=toLatLngBound(options.bounds,!0)),OverlayView.prototype=new GMOverlayView,new OverlayView}function getProjection(map){function Overlay(){var self=this;return self.onAdd=self.onRemove=self.draw=function(){},gm.OverlayView.call(self)}Overlay.prototype=new gm.OverlayView;var overlay=new Overlay;return overlay.setMap(map),overlay.getProjection()}function ClusterOverlay(cluster,markers,overlay,bounds){var self=this;self.cluster=cluster,self.markers=markers,self.$=overlay.$,self.overlay=overlay,overlay.getBounds=function(){return gmElement("LatLngBounds",bounds.getSouthWest(),bounds.getNorthEast())}}function Cluster(map,options){function extendsMapBounds(){return gmElement("Circle",{center:map.getCenter(),radius:1.15*distanceInMeter(map.getCenter(),map.getBounds().getNorthEast())}).getBounds()}function extendsBounds(latLng){var p=projection.fromLatLngToDivPixel(latLng);return gmElement("LatLngBounds",projection.fromDivPixelToLatLng(gmElement("Point",p.x-radius,p.y+radius)),projection.fromDivPixelToLatLng(gmElement("Point",p.x+radius,p.y-radius)))}function redraw(){var keys,bounds,overlayOptions,hash,currentMarkers,viewHash,zoom=map.getZoom(),currentHashes={},newOverlays=[],ignore={};viewHash=""+zoom,zoom>3&&(bounds=extendsMapBounds(),foreach(markers,function(marker,index){bounds.contains(marker.getPosition())||(viewHash+="-"+index,ignore[index]=!0,marker.getMap()&&marker.setMap(null))})),filter&&foreach(markers,function(marker,index){ignore[index]||filter(marker)||(viewHash+="-"+index,ignore[index]=!0,marker.getMap()&&marker.setMap(null))}),viewHash!==previousViewHash&&(previousViewHash=viewHash,foreach(markers,function(marker,index){ignore[index]||(keys=[index],bounds=extendsBounds(marker.getPosition()),enabled&&foreach(slice(markers,index+1),function(marker,idx){idx+=index+1,!ignore[idx]&&bounds.contains(marker.getPosition())&&(keys.push(idx),ignore[idx]=!0)}),hash=keys.join("-"),currentHashes[hash]=!0,overlays[hash]||(currentMarkers=keys.map(function(key){return markers[key]}),overlayOptions=options.cb(slice(currentMarkers)),overlayOptions?(bounds=gmElement("LatLngBounds"),foreach(currentMarkers,function(marker){bounds.extend(marker.getPosition()),marker.getMap()&&marker.setMap(null)}),overlayOptions=dupOpts(overlayOptions),overlayOptions.position=bounds.getCenter(),overlays[hash]=new ClusterOverlay(self,slice(currentMarkers),createOverlayView(map,overlayOptions),bounds),newOverlays.push(overlays[hash])):foreach(currentMarkers,function(marker){marker.getMap()||marker.setMap(map)})))}),foreach(objectKeys(overlays),function(key){currentHashes[key]||(overlays[key].overlay.setMap(null),delete overlays[key])}),newOverlays.length&&foreach(handlers,function(fn){fn(newOverlays)}))}function delayRedraw(){clearTimeout(timer),timer=setTimeout(redraw,100)}function init(){gm.event.addListener(map,"zoom_changed",delayRedraw),gm.event.addListener(map,"bounds_changed",delayRedraw),redraw()}var timer,igniter,previousViewHash,projection,filter,self=this,markers=[],radius=(options.size||200)>>1,enabled=!0,overlays={},handlers=[];options=options||{},options.markers=options.markers||[],self._b=function(fn){fn(objectValues(overlays)),handlers.push(fn)},self.markers=function(){return slice(markers)},self.groups=function(){return objectValues(overlays)},self.enable=function(){enabled||(enabled=!0,previousViewHash="",delayRedraw())},self.disable=function(){enabled&&(enabled=!1,previousViewHash="",delayRedraw())},self.add=function(marker){markers.push(marker),previousViewHash="",delayRedraw()},self.remove=function(marker){markers=markers.filter(function(item){return item!==marker}),previousViewHash="",delayRedraw()},self.filter=function(fn){filter!==fn&&(filter=fn,previousViewHash="",delayRedraw())},options.markers.map(function(opts){opts.position=toLatLng(opts.position),markers.push(gmElement("Marker",opts))}),igniter=setInterval(function(){(projection=getProjection(map))&&(clearInterval(igniter),init())},10)}function Handler(chain,items){var self=this;objectKeys(items[0]).forEach(function(name){self[name]=function(){var results=[],args=slice(arguments);return items.forEach(function(item){results.push(item[name].apply(item,args))}),"get"===name?results.length>1?results:results[0]:self}}),self.$=chain}function Gmap3($container,options){function context(){return{$:$container,get:self.get}}function attachEvents(events,instances,args,once){var hasArgs=arguments.length>3;hasArgs||(once=args),$.each(events,function(eventName,handlers){foreach(instances,function(instance){var isClusterOverlay=instance instanceof ClusterOverlay,isDom=isClusterOverlay||instance instanceof gm.OverlayView,eventListener=isDom?instance.$.get(0):instance;gm.event["add"+(isDom?"Dom":"")+"Listener"+(once?"Once":"")](eventListener,eventName,function(event){foreach(handlers,function(handler){if(isFunction(handler))if(isClusterOverlay)handler.call(context(),void 0,instance,instance.cluster,event);else if(hasArgs){var buffer=slice(args);buffer.unshift(instance),buffer.push(event),handler.apply(context(),buffer)}else handler.call(context(),instance,event)})})})})}function multiple(fn){return function(options){if(isArray(options)){var instances=[];return all(options.map(function(opts){return fn.call(self,opts).then(function(instance){instances.push(instance)})})).then(function(){return previousResults.push(instances),instances})}return fn.apply(self,arguments).then(function(instance){return previousResults.push(instance),instance})}}function chainToPromise(fn){return function(){var args=slice(arguments);return promise=promise.then(function(instance){return isFunction(args[0])?when(args[0].call(context(),instance)).then(function(value){return args[0]=value,fn.apply(self,args)}):when(fn.apply(self,args))})}}var map,previousResults=[],promise=when(),self=this;self.map=chainToPromise(function(options){return map||resolveLatLng(options,"center",function(opts){return map=gmElement("Map",$container.get(0),opts),previousResults.push(map),map})}),foreachStr("Marker:position Circle:center InfoWindow:position:0 Polyline:path Polygon:paths",function(item){item=item.split(":");var property=item[1]||"";self[item[0].toLowerCase()]=chainToPromise(multiple(function(options){return(property.match(/^path/)?resolveArrayOfLatLng:resolveLatLng)(options,property,function(opts){return"0"!==item[2]&&(opts.map=map),gmElement(item[0],opts)})}))}),foreachStr("TrafficLayer TransitLayer BicyclingLayer",function(item){self[item.toLowerCase()]=chainToPromise(function(){var instance=gmElement(item);return previousResults.push(instance),instance.setMap(map),instance})}),self.kmllayer=chainToPromise(multiple(function(options){return options=dupOpts(options),options.map=map,when(gmElement("KmlLayer",options))})),self.rectangle=chainToPromise(multiple(function(options){return resolveLatLngBounds(options,function(opts){return opts.map=map,gmElement("Rectangle",opts)})})),self.overlay=chainToPromise(multiple(function(options){function fn(opts){return createOverlayView(map,opts)}return options=dupOpts(options),options.bounds?resolveLatLngBounds(options,fn):resolveLatLng(options,"position",fn)})),self.groundoverlay=chainToPromise(function(url,bounds,options){return resolveLatLngBounds({bounds:bounds},function(opts){options=dupOpts(options),options.map=map;var instance=gmElement("GroundOverlay",url,opts.bounds,options);return previousResults.push(instance),instance})}),self.styledmaptype=chainToPromise(function(styleId,styles,options){var instance=gmElement("StyledMapType",styles,options);return previousResults.push(instance),map.mapTypes.set(styleId,instance),instance}),self.streetviewpanorama=chainToPromise(function(container,options){return resolveLatLng(options,"position",function(opts){var instance=gmElement("StreetViewPanorama",$(container).get(0),opts);return map.setStreetView(instance),previousResults.push(instance),instance})}),self.route=chainToPromise(function(options){var dfd=deferred();return options=dupOpts(options),options.origin=toLatLng(options.origin),options.destination=toLatLng(options.destination),service("DirectionsService").route(options,function(results,status){previousResults.push(results),dfd.resolve(status===gm.DirectionsStatus.OK&&results)}),dfd}),self.cluster=chainToPromise(function(options){var cluster=new Cluster(map,dupOpts(options));return previousResults.push(cluster),resolved(cluster)}),self.directionsrenderer=chainToPromise(function(options){var instance;return options&&(options=dupOpts(options),options.map=map,options.panel&&(options.panel=$(options.panel).get(0)),instance=gmElement("DirectionsRenderer",options)),previousResults.push(instance),instance}),self.latlng=chainToPromise(multiple(function(options){return resolveLatLng(options,"latlng",function(opts){return previousResults.push(opts.latlng),opts.latlng})})),self.fit=chainToPromise(function(){var bounds=gmElement("LatLngBounds");return foreach(previousResults,function(instances){instances!==map&&foreach(instances,function(instance){instance&&(instance.getPosition&&instance.getPosition()?bounds.extend(instance.getPosition()):instance.getBounds&&instance.getBounds()?(bounds.extend(instance.getBounds().getNorthEast()),bounds.extend(instance.getBounds().getSouthWest())):instance.getPaths&&instance.getPaths()?foreach(instance.getPaths().getArray(),function(path){foreach(path.getArray(),function(latLng){bounds.extend(latLng)})}):instance.getPath&&instance.getPath()?foreach(instance.getPath().getArray(),function(latLng){bounds.extend(latLng)}):instance.getCenter&&instance.getCenter()&&bounds.extend(instance.getCenter()))})}),bounds.isEmpty()||map.fitBounds(bounds),!0}),self.wait=function(duration){promise=promise.then(function(instance){var dfd=deferred();return setTimeout(function(){dfd.resolve(instance)},duration),dfd})},self.then=function(fn){isFunction(fn)&&(promise=promise.then(function(instance){return when(fn.call(context(),instance)).then(function(newInstance){return isUndefined(newInstance)?instance:newInstance})}))},self.catch=function(fn){isFunction(fn)&&(promise=promise.then(null,function(reason){return when(fn.call(context(),reason))}))},foreachStr("on once",function(name,once){self[name]=function(){var events=arguments[0];events&&("string"==typeof events&&(events={},events[arguments[0]]=slice(arguments,1)),promise.then(function(instances){if(instances){if(instances instanceof Cluster)return instances._b(function(items){items&&items.length&&attachEvents(events,items,once)}),attachEvents(events,instances.markers(),[void 0,instances],once);attachEvents(events,instances,once)}}))}}),self.get=function(index){return isUndefined(index)?previousResults.map(function(instance){return isArray(instance)?instance.slice():instance}):(index<0&&(index=previousResults.length+index),isArray(previousResults[index])?previousResults[index].slice():previousResults[index])},options&&self.map(options)}var gm,loadOptions,services={},when=$.when,extend=$.extend,isArray=$.isArray,isFunction=$.isFunction,deferred=$.Deferred;when(function(){var script,dfd=deferred();return $.holdReady(!0),ready(function(){window.google&&window.google.maps||!1===loadOptions?dfd.resolve():(window.__gmap3=function(){delete window.__gmap3,dfd.resolve()},script=document.createElement("script"),script.type="text/javascript",script.src="https://maps.googleapis.com/maps/api/js?callback=__gmap3"+(loadOptions?"&"+("string"==typeof loadOptions?loadOptions:serialize(loadOptions)):""),$("head").append(script))}),dfd}()).then(function(){$.holdReady(!1)}),$.gmap3=function(options){loadOptions=options},$.fn.gmap3=function(options){var items=[];return gm=window.google.maps,this.each(function(){var $this=$(this),gmap3=$this.data("gmap3");gmap3||(gmap3=new Gmap3($this,options),$this.data("gmap3",gmap3)),items.push(gmap3)}),new Handler(this,items)}}(jQuery,window,document);